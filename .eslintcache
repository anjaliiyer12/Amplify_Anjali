[{"/Users/anjaliiyer/Desktop/ProductivityApp/src/index.js":"1","/Users/anjaliiyer/Desktop/ProductivityApp/src/App.js":"2","/Users/anjaliiyer/Desktop/ProductivityApp/src/ToDoPage.js":"3","/Users/anjaliiyer/Desktop/ProductivityApp/src/aws-exports.js":"4","/Users/anjaliiyer/Desktop/ProductivityApp/src/components/FilterButton.js":"5","/Users/anjaliiyer/Desktop/ProductivityApp/src/components/Form.js":"6","/Users/anjaliiyer/Desktop/ProductivityApp/src/components/Todo.js":"7"},{"size":175,"mtime":1608467565000,"results":"8","hashOfConfig":"9"},{"size":421,"mtime":1608467565000,"results":"10","hashOfConfig":"9"},{"size":3277,"mtime":1608811335990,"results":"11","hashOfConfig":"9"},{"size":469,"mtime":1608812248405,"results":"12","hashOfConfig":"9"},{"size":418,"mtime":1608467565000,"results":"13","hashOfConfig":"9"},{"size":865,"mtime":1608467565000,"results":"14","hashOfConfig":"9"},{"size":2877,"mtime":1608467565000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"boqp9z",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/anjaliiyer/Desktop/ProductivityApp/src/index.js",[],["33","34"],"/Users/anjaliiyer/Desktop/ProductivityApp/src/App.js",["35"],"/* src/App.js */\nimport { urlAlphabet } from 'nanoid'\nimport React from 'react'\nimport ToDoPage from \"./ToDoPage\"\nimport \"./App.css\";\n//import awsExports from \"../aws-exports\";\n//Amplify.configure(awsExports);\n\n\n\nconst App = () => {\n\n  return (\n    <div>\n      <div class=\"bag_image\"><h2><b>Quarantine Productivity App</b></h2></div>\n      <div class=\"bg_image\"><ToDoPage/></div>\n    </div>\n    \n  )\n}\n\nexport default App","/Users/anjaliiyer/Desktop/ProductivityApp/src/ToDoPage.js",["36"],"import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\nimport Amplify from 'aws-amplify';\nimport awsconfig from './aws-exports';\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\n\nAmplify.configure(awsconfig);\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Complete CPSC 454 Project\", completed: true },\n  { id: \"todo-1\", name: \"Finish The Fall 2020 Semester\", completed: false },\n  { id: \"todo-2\", name: \"Get A Full Time Position\", completed: false }\n];\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction ToDoPage() {\n  const [tasks, setTasks] = useState(DATA);\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div>\n      <Form addTask={addTask} />\n      <div>\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n      <br/>\n      <AmplifySignOut>Sign Out</AmplifySignOut>\n    </div>\n  );\n}\n\nexport default withAuthenticator(ToDoPage);\n","/Users/anjaliiyer/Desktop/ProductivityApp/src/aws-exports.js",[],"/Users/anjaliiyer/Desktop/ProductivityApp/src/components/FilterButton.js",[],"/Users/anjaliiyer/Desktop/ProductivityApp/src/components/Form.js",[],"/Users/anjaliiyer/Desktop/ProductivityApp/src/components/Todo.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":21},{"ruleId":"45","severity":1,"message":"46","line":122,"column":7,"nodeType":"47","endLine":125,"endColumn":8},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'urlAlphabet' is defined but never used.","Identifier","unusedVar","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]